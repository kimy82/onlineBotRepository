<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">


	<http auto-config="false" use-expressions="true" entry-point-ref="authenticationProcessingFilterEntryPoint">
		
		<custom-filter position="FORM_LOGIN_FILTER" ref="authenticationFilter" />
		<intercept-url pattern="/user/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"  ></intercept-url>		
		<intercept-url pattern="/payment/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"></intercept-url>		
		<intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_ADMIN')" ></intercept-url>
		<!-- hhtps -->
		<!-- intercept-url pattern="/j_spring_security_check" requires-channel="https"/ -->
		<logout logout-success-url="/" />
		
	</http>

	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<password-encoder hash="sha" />
			 <jdbc-user-service data-source-ref="dataSource"
 
		   users-by-username-query="
		      select username,password, enabled 
		      from users where username=?" 
 
		   authorities-by-username-query="
		      select u.username, ur.authority from users u, user_roles ur 
		      where u.user_id = ur.user_id and u.username =?  " 
 
			/>
			<!-- user-service>
				<user name="mkyong" password="7c4a8d09ca3762af61e59520943dc26494f8941b" authorities="ROLE_USER" />
			</user-service -->
		</authentication-provider>
	</authentication-manager>
	
	<beans:bean id="authenticationProcessingFilterEntryPoint"
	    class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
	    <beans:property name="loginFormUrl" value="/login.action" />
	    <beans:property name="forceHttps" value="false"/>
	    <!-- https -->
	    <!--  beans:property name="forceHttps" value="true"/>
  		<beans:property name="portMapper" ref="portMapper"/>
  		<beans:property name="portResolver" ref="portResolverImpl"/-->
	</beans:bean>

	<beans:bean id="authenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
	    <beans:property name="authenticationManager" ref="authenticationManager"/>
	    <beans:property name="filterProcessesUrl" value="/j_spring_security_check"/>
	    <beans:property name="authenticationFailureHandler" ref="failureHandler"/>
	    <beans:property name="authenticationSuccessHandler" ref="successHandler"/>
	</beans:bean>
	
	<beans:bean id="portResolverImpl" class="org.springframework.security.web.PortResolverImpl">
    	<beans:property name="portMapper" ref="portMapper"/>
	</beans:bean>
	<beans:bean id="portMapper" class="org.springframework.security.web.PortMapperImpl">
        <beans:property name="portMappings">
            <beans:map>
                <beans:entry key="80" value="443"/>
                <beans:entry key="7070" value="8443"/>                
                <beans:entry key="5580" value="5543"/>
            </beans:map>
        </beans:property>
    </beans:bean>

	<beans:bean id="successHandler" class="com.online.filter.spring.security.AjaxAuthenticationSuccessHandler"  >
		<beans:property name="redirectStrategy" ref="redirectStrategy" ></beans:property>
	</beans:bean>
	
	<beans:bean id="failureHandler" class="com.online.filter.spring.security.AjaxAuthenticationFailureHandler" >
		<beans:property name="defaultFailureUrl" value="/loginfailed.action"/>	
	</beans:bean>
	<beans:bean id="redirectStrategy" class="org.springframework.security.web.DefaultRedirectStrategy"  />
	

</beans:beans>